{"version":3,"sources":["components/Header/index.js","components/TableRow/index.js","components/HeaderRow/index.js","components/BuildTable/index.js","components/FilterAndUsage/index.js","App.js","index.js"],"names":["Header","styling","className","style","id","TableRow","props","friend","alt","first_name","src","avatar","last_name","email","gender","city","country","phone_number","onClick","handleSortBy","BuildTable","HeaderRow","friends","map","FilterAndUsage","console","log","onChange","event","handleFilterChange","placeholder","App","state","friendsOrig","sortBy","sortAscending","filter","setState","sortAndFilterFriends","target","value","this","friendsDuplicate","aFriend","searchable","toLowerCase","indexOf","sort","a","b","fa","fb","forEach","element","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0b35d19.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./local-style.css\";\r\n\r\nfunction Header() {\r\n  const styling = {\r\n    \"font-size\": \"20px\"\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-info ghHeader\">\r\n        <span style={styling} id=\"companyName\">G Dog Enterprises</span>\r\n        <span style={styling} id=\"applicationName\">Friend Table</span>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction TableRow(props) {\n// console.log (`---TableRow---`)\n// console.log (props);\n  const friend = props.friend;\n  return (\n    <tr>\n      <td>\n        {friend.id}\n      </td>\n      <td>\n        <img alt={friend.first_name} src={friend.avatar} />\n      </td>\n      <td>\n        {friend.first_name}\n      </td>\n      <td>\n        {friend.last_name}\n      </td>\n      <td>\n        {friend.email}\n      </td>\n      <td>\n        {friend.gender}\n      </td>\n      <td>\n        {friend.city}\n      </td>\n      <td>\n        {friend.country}\n      </td>\n      <td>\n        {friend.phone_number}\n      </td>\n    </tr>\n  );\n}\n\nexport default TableRow;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst styling = {\n  \"padding-left\": \"9px\",\n  \"padding-right\": \"9px\"\n}\n\nfunction TableRow(props) {\n  return (\n    <thead>\n      <tr>\n        <th>\n          <span className=\"clickable\" onClick={() => props.handleSortBy(\"id\")}>ID</span>\n        </th>\n        <th>\n          Avatar\n        </th>\n        <th style={styling}>\n          <span className=\"clickable\" onClick={() => props.handleSortBy(\"firstName\")}>First Name</span>\n        </th>\n        <th style={styling}>\n          <span className=\"clickable\" onClick={() => props.handleSortBy(\"lastName\")}>Last Name</span>\n        </th>\n        <th>\n          Email Address\n        </th>\n        <th>\n          <span className=\"clickable\" onClick={() => props.handleSortBy(\"gender\")}>Gender</span>\n        </th>\n        <th>\n        <span className=\"clickable\" onClick={() => props.handleSortBy(\"city\")}>City</span>\n        </th>\n        <th>\n          <span className=\"clickable\" onClick={() => props.handleSortBy(\"country\")}>Country</span>\n        </th>\n        <th>\n          Phone Number\n        </th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableRow;\n","import React from \"react\";\r\nimport HeaderRow from \"../HeaderRow\"\r\nimport TableRow from \"../TableRow\"\r\n// import \"./style.css\";\r\n\r\nfunction BuildTable(props) {\r\n// console.log (`---BuildTable - props`)\r\n// console.log (props);\r\n//console.log (props.children);\r\n\r\n  const styling = {\r\n    \"font-size\": \"15px\",\r\n    \"margin-left\": \"5px\",\r\n    \"margin-bottom\": \"30px\"\r\n  };\r\n\r\n  return (\r\n    <table style={styling} className=\"table table-bordered table-striped\">\r\n      <HeaderRow\r\n        handleSortBy={props.handleSortBy} \r\n      />\r\n      <tbody>\r\n        {props.friends.map(friend => (\r\n          <TableRow\r\n            friend={friend}\r\n          />))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default BuildTable;","import React from \"react\";\r\n\r\nfunction FilterAndUsage(props) {\r\n  const styling = {\r\n    \"font-size\": \"15px\",\r\n    \"padding\": \"5px 5px 5px 5px\"\r\n  };\r\n\r\n  console.log (`FilterAndUsage`);\r\n  console.log (props);\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td style={styling}>\r\n            Welcome to Friend Table.  This is a static list of 100 'friends' that you can\r\n            sort by ID, First Name, Last Name, Gender, City and Country.  Click once for\r\n            ascending sort.  Click a second time for descending sort.  Lastly, you can filter \r\n            against the same items you can sort with the field.  Whatever you type, only cells\r\n            matching those exactly will be displayed (ignoring case).\r\n          </td>\r\n          <td style={styling}>\r\n            <input\r\n              id=\"filter_input\"\r\n              onChange={(event) => props.handleFilterChange(event)}\r\n              placeholder=\"Filter text\" />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default FilterAndUsage;","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport FriendCard from \"./components/TableRow\";\nimport BuildTable from \"./components/BuildTable\";\nimport FriendRow from \"./components/Title\";\nimport FilterAndUsage from \"./components/FilterAndUsage\";\nimport friends from \"./friends-new.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    friendsOrig: [],\n    sortBy: \"id\",\n    sortAscending: true,\n    filter: \"\"\n  };\n\n  handleSortBy = (id) => {\n    console.log (`In handleSortBy,  ID is ${id}`);\n    var sortAscending;\n    if (this.state.sortBy !== id) {\n      // The current sort does not equal new sort.  Clobber sortOrder\n      sortAscending = true;\n    }\n\n    else if (this.state.sortAscending === true) {\n      // User clicked same sort.  Since it was ascending, make it descending (setting sortAscenting to false)\n      console.log (`Second case`);\n      sortAscending = false;\n    }\n\n    else {\n      // sortAscending needs to be true\n      sortAscending = true;\n    }\n\n    this.setState (\n      {\n        sortAscending: sortAscending,\n        sortBy: id\n      },\n      () => {\n        console.log (`After setState - sortBy:  ${this.state.sortBy} sortAscending: ${this.state.sortAscending}`);\n        this.sortAndFilterFriends ();\n      }\n    );\n  };\n\n  sortAndFilterFriends () {\n    const sortBy = this.state.sortBy;\n    const sortAscending = this.state.sortAscending;\n\n    var friends2 = this.state.friendsDuplicate;\n    var friends = friends2.filter (aFriend => aFriend.searchable.toLowerCase().indexOf(this.state.filter.toLowerCase()) !== -1);\n\n    // Handle sorting.  Based on sortBy and sortOrder, sort by either ascending or descending\n    friends.sort((a, b) => {\n      let fa;\n      let fb;\n\n      switch (sortBy) {\n        case \"id\":\n          if (sortAscending) {\n            fa = a.id;\n            fb = b.id;\n          }\n\n          else {\n            fb = a.id;\n            fa = b.id;\n          }\n          \n          break;\n\n        case \"firstName\":\n          if (sortAscending) {\n            fa = a.first_name.toLowerCase();\n            fb = b.first_name.toLowerCase();\n          }\n\n          else {\n            fb = a.first_name.toLowerCase();\n            fa = b.first_name.toLowerCase();\n          }\n          \n          break;\n  \n        case \"lastName\":\n          if (sortAscending) {\n            fa = a.last_name.toLowerCase();\n            fb = b.last_name.toLowerCase();\n          }\n\n          else {\n            fb = a.last_name.toLowerCase();\n            fa = b.last_name.toLowerCase();\n          }\n          \n          break;\n\n        case \"gender\":\n          if (sortAscending) {\n            fa = a.gender.toLowerCase();\n            fb = b.gender.toLowerCase();\n          }\n\n          else {\n            fb = a.gender.toLowerCase();\n            fa = b.gender.toLowerCase();\n          }\n          \n          break;\n    \n          case \"city\":\n            if (sortAscending) {\n              fa = a.city.toLowerCase();\n              fb = b.city.toLowerCase();\n            }\n  \n            else {\n              fb = a.city.toLowerCase();\n              fa = b.city.toLowerCase();\n            }\n            \n            break;\n\n          case \"country\":\n            if (sortAscending) {\n              fa = a.country.toLowerCase();\n              fb = b.country.toLowerCase();\n            }\n  \n            else {\n              fb = a.country.toLowerCase();\n              fa = b.country.toLowerCase();\n            }\n            \n            break;\n      }\n\n      if (fa < fb) {\n          return -1;\n      }\n\n      if (fa > fb) {\n          return 1;\n      }\n\n      return 0;\n    });\n\n    this.setState (\n      {\n        friends: friends\n      }\n      , () => {\n        console.log (this.state.friends);\n      }\n    );\n  }\n\n  componentDidMount () {\n    // Copy the friends array to friendsDuplicate, and add a concatenated search paramater\n    // 'searchable' to it that can be used as a general filter\n    var friendsDuplicate = this.state.friends;\n    friendsDuplicate.forEach ((element) => {\n      element.searchable = `${element.first_name} ${element.last_name} ${element.city} ${element.country} ${element.gender}`;\n    });\n\n    this.setState (\n      {\n        friendsDuplicate: friendsDuplicate\n      },\n      () => {\n        console.log (this.state.friendsDuplicate);\n      }\n    )\n  }\n\n  handleFilterChange = event => {\n    this.setState (\n      {\n        filter: event.target.value\n      },\n      () => {\n        this.sortAndFilterFriends ();\n      }\n    )\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <main>\n        <Header />\n        <FilterAndUsage \n          handleFilterChange={this.handleFilterChange}\n        />\n        <BuildTable\n          handleSortBy={this.handleSortBy}\n          friends={this.state.friends}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}